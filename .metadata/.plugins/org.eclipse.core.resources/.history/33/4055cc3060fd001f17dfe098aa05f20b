// 클래스는 객체를 생성하기 위한 설계도로 클래스 설계 시 다른 클래스와 겹치지 않게 정의 
// 클래스는 멤버 변수 (Data Members), Method, Constructor, Destructor 로 구성 
// 클래스 작성 시 멤버 변수는 속성, 메서드는 기능, 객체는 클래스로부터 생성된 제품을 의미  
// 클래스 작성 시 멤버 변수를 먼저 작성하고 메서드를 뒤에 선언 


// public class 는 파일명과 같은 이름의 클래스에게만 부여 

// 객체의 선언과 생성은 따로 작성할 수 있으며 객체의 선언 방식은 2가지 
// 1) 선언과 생성을 따로 작성 							2) 선언과 생성을 동시에 작성 
// 클래스명 객체명; (객체는 null 값을 가짐)  클래스명 객체명 = new 클래스명();
// 객체명 = new 클래스명  

// 메서드 사용 방법 
// static 이 안붙은 일반 메서드를 다른 객체에서 호출하는 경우 "객체명.메서드명();" 형식으로 사용 

// 접근 제어자 
// public 은 모든 범위에서 사용 가능하고 private 은 해당 중괄호 내에서만 사용 가능 
// protected 는 해당 중괄호 내 및 해당 패키지와 자식 클래스에서 사용 가능
// default (기본값) 는 해당 중괄호 내 및 해당 패키지에서 사용 가능


// 일반적으로 하나의 파일에 하나의 클래스를 사용하지만 
// 반드시 하나의 파일 안에 하나의 클래스만 있어야 하는 것은 아님 
// 클래스명이 같은 경우에만 변수나 메서드에서는 public 이 가능  
// 멤버 변수는 private 메서드는 public 선언이 일반적 
// private 로 선언된 멤버 변수는 getter / setter 를 통해 해당 변수로의 접근 가능

package day08;

public class Class01 {
	public static void main(String[] args) {
		
	}
}
